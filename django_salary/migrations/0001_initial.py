# Generated by Django 4.2 on 2023-05-19 09:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parsing_date', models.DateField(blank=True, default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">DateTimeField</small><hr><br>', null=True, verbose_name='Дата разбора')),
                ('parsing_numeration', models.IntegerField(blank=True, default=None, error_messages=False, help_text='<small class="text-muted">IntegerField [0, ]</small><hr><br>', null=True, unique=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Номер разбора')),
                ('band_or_performer', models.TextField(blank=True, default='', error_messages=False, help_text='<small class="text-muted">text_field[0, 3000]</small><hr><br>', max_length=3000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(3000)], verbose_name='Группа/Исполнитель')),
                ('track_code', models.TextField(blank=True, default='', error_messages=False, help_text='<small class="text-muted">text_field[0, 3000]</small><hr><br>', max_length=3000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(3000)], verbose_name='Трек код')),
                ('seller_nick', models.TextField(blank=True, default='', error_messages=False, help_text='<small class="text-muted">text_field[0, 3000]</small><hr><br>', max_length=3000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(3000)], verbose_name='Ник продавца')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">DateTimeField</small><hr><br>', null=True, verbose_name='Дата и время создания')),
                ('author', models.ForeignKey(blank=True, default=None, error_messages=False, help_text='<small class="text-muted">ForeignKey</small><hr><br>', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Базовые Заказы',
                'verbose_name_plural': 'Базовые Заказы',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='LoggingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_index=True, default='', error_messages=False, help_text='<small class="text-muted">CharField [0, 100]</small><hr><br>', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(100)], verbose_name='Имя пользователя')),
                ('ip', models.GenericIPAddressField(blank=True, db_index=True, default=None, error_messages=False, help_text='<small class="text-muted">ip[0, 300]</small><hr><br>', null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(300)], verbose_name='Ip адрес')),
                ('text', models.TextField(blank=True, db_index=True, default='', error_messages=False, help_text='<small class="text-muted">TextField [0, 3000]</small><hr><br>', max_length=3000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(3000)], verbose_name='Действие')),
                ('created', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">DateTimeField</small><hr><br>', null=True, verbose_name='Дата и время создания')),
            ],
            options={
                'verbose_name': 'Лог',
                'verbose_name_plural': 'Логи',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_name', models.TextField(blank=True, default='', error_messages=False, help_text='<small class="text-muted">text_field[0, 3000]</small><hr><br>', max_length=3000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(3000)], verbose_name='Название карты')),
                ('korean_price', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Цена каждой карты в Корейских ценах')),
                ('kurs_obmena', models.DecimalField(blank=True, decimal_places=4, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)], verbose_name='Курс обмена')),
                ('price_v_tenge_po_kursu', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Цена в тенге по курсу')),
                ('price_v_tenge_bez_uchetov', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Цена в тенге (без учетов)')),
                ('pribyl', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Прибыль')),
                ('uchety_obschee_za_razbor', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Учеты (общее за разбор)')),
                ('itogo_po_razboru', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Итого по разбору')),
                ('zarplata', models.DecimalField(blank=True, decimal_places=1, default=0.0, error_messages=False, help_text='<small class="text-muted">DecimalField</small><hr><br>', max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)], verbose_name='Зарплата')),
                ('parsing_status', models.TextField(blank=True, default='', error_messages=False, help_text='<small class="text-muted">text_field[0, 3000]</small><hr><br>', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(100)], verbose_name='Статус разбора')),
                ('zarplata_status', models.BooleanField(blank=True, default=False, error_messages=False, help_text='<small class="text-muted">BooleanField</small><hr><br>', verbose_name='Статус зарплаты')),
                ('nick_zanyavshego', models.TextField(blank=True, default='', error_messages=False, help_text='<small class="text-muted">text_field[0, 3000]</small><hr><br>', max_length=3000, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(3000)], verbose_name='Ник того, кто занял')),
                ('oplata_status', models.BooleanField(blank=True, default=False, error_messages=False, help_text='<small class="text-muted">BooleanField</small><hr><br>', verbose_name='Статус оплаты')),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now, error_messages=False, help_text='<small class="text-muted">DateTimeField</small><hr><br>', null=True, verbose_name='Дата и время создания')),
                ('base_order', models.ForeignKey(blank=True, default=None, error_messages=False, help_text='<small class="text-muted">ForeignKey</small><hr><br>', null=True, on_delete=django.db.models.deletion.CASCADE, to='django_salary.baseorders', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Заказы',
                'verbose_name_plural': 'Заказы',
                'ordering': ('id',),
            },
        ),
    ]
